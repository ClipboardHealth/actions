name: Test terraform action
on:
  pull_request:
    paths:
      - .github/actions/terraform
      - .github/workflows/test-action-terraform.yml

env:
  SERVICE_NAME: "tmp-cbh-test-terraform-creation"
  TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

jobs:
  exec_action_plan_only:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_NAME: "branch-${{ github.event.pull_request.head.ref }}-plan_only"
    steps:
      - uses: actions/checkout@v3

      - name: Create a terraform workspace
        uses: ./.github/actions/terraform
        with:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
          TERRAFORM_TAG_LIST: "pipeline,temporary,must-be-erased"
          TERRAFORM_PATH: ".github/actions/terraform/test/terraform"
          TERRAFORM_TOKEN: ${{ env.TERRAFORM_TOKEN }}
          TERRAFORM_VAR_PATH: ".github/actions/terraform/test/terraform/test.tfvars"
          PLAN_ONLY: true

      - name: Destroy test resources from workspace
        working-directory: .github/actions/terraform/test/terraform
        run: terraform destroy --auto-approve

      - name: Destroy previously created terraform workspace
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
          TERRAFORM_TOKEN: ${{ env.TERRAFORM_TOKEN }}
        run: .github/actions/terraform/destroy-tfc-workspace.sh
  exec_action_apply:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_NAME: "branch-${{ github.event.pull_request.head.ref }}-apply"
    steps:
      - uses: actions/checkout@v3

      - name: Create a terraform workspace
        uses: ./.github/actions/terraform
        with:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
          TERRAFORM_TAG_LIST: "pipeline,temporary,must-be-erased"
          TERRAFORM_PATH: ".github/actions/terraform/test/terraform"
          TERRAFORM_TOKEN: ${{ env.TERRAFORM_TOKEN }}
          TERRAFORM_VAR_PATH: ".github/actions/terraform/test/terraform/test.tfvars"
          PLAN_ONLY: false

      - name: Destroy test resources from workspace
        working-directory: .github/actions/terraform/test/terraform
        run: terraform destroy --auto-approve

      - name: Destroy previously created terraform workspace
        env:
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
          TERRAFORM_TOKEN: ${{ env.TERRAFORM_TOKEN }}
        run: .github/actions/terraform/destroy-tfc-workspace.sh
